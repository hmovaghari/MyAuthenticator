<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept_" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Are you sure to delete the database? All current information will be deleted!" xml:space="preserve">
    <value>Are you sure to delete the database? All current information will be deleted!</value>
  </data>
  <data name="Are you sure to delete?" xml:space="preserve">
    <value>Are you sure to delete?</value>
  </data>
  <data name="Are you sure to restore? All current information will be deleted!" xml:space="preserve">
    <value>Are you sure to restore? All current information will be deleted!</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="BackupRestoreChange" xml:space="preserve">
    <value>Backup/restore or change database</value>
  </data>
  <data name="Cancel_" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Change camera" xml:space="preserve">
    <value>Change camera</value>
  </data>
  <data name="Change database path" xml:space="preserve">
    <value>Change database path</value>
  </data>
  <data name="Change language" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="Change password" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Check authentication when" xml:space="preserve">
    <value>Check authentication when</value>
  </data>
  <data name="Check updates when start" xml:space="preserve">
    <value>Check updates when start</value>
  </data>
  <data name="Clear database" xml:space="preserve">
    <value>Clear database</value>
  </data>
  <data name="Copied to the clipboard" xml:space="preserve">
    <value>Copied to the clipboard</value>
  </data>
  <data name="Copy dynamic password" xml:space="preserve">
    <value>Copy dynamic password</value>
  </data>
  <data name="Copy secret key" xml:space="preserve">
    <value>Copy secret key</value>
  </data>
  <data name="Create Or Move Database" xml:space="preserve">
    <value>If the database file is new, select Yes
If the database file is old, select No
Otherwise, click Cancel</value>
  </data>
  <data name="Data is saved" xml:space="preserve">
    <value>Data is saved</value>
  </data>
  <data name="Database path" xml:space="preserve">
    <value>Database path</value>
  </data>
  <data name="Database_" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Dynamic password" xml:space="preserve">
    <value>Dynamic password</value>
  </data>
  <data name="Edit_" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Get backup" xml:space="preserve">
    <value>Get backup</value>
  </data>
  <data name="Get the new update" xml:space="preserve">
    <value>Get the new update</value>
  </data>
  <data name="Input control" xml:space="preserve">
    <value>Input control</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="IsGetUpdate" xml:space="preserve">
    <value>Current version\t{Resources.Version}\nUpdate version\t{UpdateVersion}\nShould the update be performed?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Move row" xml:space="preserve">
    <value>Move row</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name is duplicate" xml:space="preserve">
    <value>Name is duplicate</value>
  </data>
  <data name="Name is empty" xml:space="preserve">
    <value>Name is empty</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="No camera found" xml:space="preserve">
    <value>No camera found!</value>
  </data>
  <data name="NoConnection" xml:space="preserve">
    <value>There is no connection to server</value>
  </data>
  <data name="OpenDatabasePath" xml:space="preserve">
    <value>Open database path</value>
  </data>
  <data name="Password is wrong" xml:space="preserve">
    <value>Password is wrong</value>
  </data>
  <data name="Password not entered" xml:space="preserve">
    <value>Password not entered</value>
  </data>
  <data name="Passwords are not the same" xml:space="preserve">
    <value>Passwords are not the same</value>
  </data>
  <data name="Password_" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Previous password" xml:space="preserve">
    <value>Previous password</value>
  </data>
  <data name="Previous password is wrong" xml:space="preserve">
    <value>Previous password is wrong</value>
  </data>
  <data name="Qr-Code" xml:space="preserve">
    <value>Qr-Code</value>
  </data>
  <data name="Read QrCode from camera" xml:space="preserve">
    <value>Read Qr-Code from camera</value>
  </data>
  <data name="Read QrCode from file" xml:space="preserve">
    <value>Read Qr-Code from file</value>
  </data>
  <data name="Read QrCode from screen" xml:space="preserve">
    <value>Read Qr-Code from screen</value>
  </data>
  <data name="Repeat password" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="Restore backup" xml:space="preserve">
    <value>Restore backup</value>
  </data>
  <data name="Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="Row number" xml:space="preserve">
    <value>Row number</value>
  </data>
  <data name="RowNumber is empty" xml:space="preserve">
    <value>RowNumber is empty</value>
  </data>
  <data name="Save data" xml:space="preserve">
    <value>Save data</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Secret key" xml:space="preserve">
    <value>Secret key</value>
  </data>
  <data name="Secret key is empty" xml:space="preserve">
    <value>Secret key is empty</value>
  </data>
  <data name="Settings_" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Show dynamic password" xml:space="preserve">
    <value>Show dynamic password</value>
  </data>
  <data name="Show secret key" xml:space="preserve">
    <value>Show secret key</value>
  </data>
  <data name="Show_QrCode_of_secret_key" xml:space="preserve">
    <value>Show Qr-Code of secret key</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="The database file does not exist" xml:space="preserve">
    <value>The database file does not exist</value>
  </data>
  <data name="The database is already created" xml:space="preserve">
    <value>The database is already created</value>
  </data>
  <data name="The software is updated" xml:space="preserve">
    <value>The software is updated</value>
  </data>
  <data name="There is no row to move" xml:space="preserve">
    <value>There is no row to change</value>
  </data>
  <data name="Two-factor authentication" xml:space="preserve">
    <value>Two-factor authentication</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>